[{"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\index.js":"1","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\reportWebVitals.js":"2","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\App.js":"3","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\ActivityPage.js":"4","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Posts.js":"5","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\NavBar.js":"6","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Post.js":"7","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Theme.js":"8","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Globalstyle.js":"9","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Data\\PostData.js":"10","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostDetail.js":"11","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\PostService.js":"12","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostForm.js":"13","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Comments.js":"14","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Comment.js":"15","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\FormService.js":"16","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Errors\\FormError.js":"17","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UpdateForm.js":"18","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostComment.js":"19","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\UserService.js":"20","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UserRegisterForm.js":"21","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UserLogin.js":"22","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UserLogout.js":"23","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\AuthService.js":"24","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\httpService.js":"25"},{"size":432,"mtime":1629311081054,"results":"26","hashOfConfig":"27"},{"size":362,"mtime":1626456011247,"results":"28","hashOfConfig":"27"},{"size":269,"mtime":1633518249510,"results":"29","hashOfConfig":"27"},{"size":1291,"mtime":1638458772586,"results":"30","hashOfConfig":"27"},{"size":1172,"mtime":1636635868579,"results":"31","hashOfConfig":"27"},{"size":2642,"mtime":1638263400817,"results":"32","hashOfConfig":"27"},{"size":893,"mtime":1636635892094,"results":"33","hashOfConfig":"27"},{"size":324,"mtime":1631948099481,"results":"34","hashOfConfig":"27"},{"size":583,"mtime":1633350953105,"results":"35","hashOfConfig":"27"},{"size":342,"mtime":1633452731907,"results":"36","hashOfConfig":"27"},{"size":3227,"mtime":1639648888235,"results":"37","hashOfConfig":"27"},{"size":2082,"mtime":1639831216372,"results":"38","hashOfConfig":"27"},{"size":2569,"mtime":1638191817707,"results":"39","hashOfConfig":"27"},{"size":1713,"mtime":1639648625535,"results":"40","hashOfConfig":"27"},{"size":204,"mtime":1639648608786,"results":"41","hashOfConfig":"27"},{"size":1703,"mtime":1639648365155,"results":"42","hashOfConfig":"27"},{"size":360,"mtime":1636964363168,"results":"43","hashOfConfig":"27"},{"size":1312,"mtime":1637045422025,"results":"44","hashOfConfig":"27"},{"size":745,"mtime":1637053441952,"results":"45","hashOfConfig":"27"},{"size":1239,"mtime":1639829650092,"results":"46","hashOfConfig":"27"},{"size":2583,"mtime":1639688541163,"results":"47","hashOfConfig":"27"},{"size":2157,"mtime":1639685772288,"results":"48","hashOfConfig":"27"},{"size":224,"mtime":1638269580741,"results":"49","hashOfConfig":"27"},{"size":315,"mtime":1638891615183,"results":"50","hashOfConfig":"27"},{"size":1195,"mtime":1639831183423,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"1qde78u",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"54"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"82","messages":"83","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"54"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"54"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"54"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"54"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\index.js",[],["116","117"],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\reportWebVitals.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\App.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\ActivityPage.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Posts.js",["118"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Post from \"./Post\";\r\nimport { getPost, getPosts } from \"../Services/PostService\";\r\n\r\nconst Posts = () => {\r\n  const history = useHistory();\r\n  const routeChange = () => {\r\n    let path = \"/posts/new\";\r\n    history.push(path);\r\n  };\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPosts()\r\n      .then((data) => {\r\n        setPosts(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error Getting Data\");\r\n      });\r\n  }, [setPosts]);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"mt-3\" variant=\"outline-primary\" onClick={routeChange}>Create New Post</Button>\r\n      <Container className=\"mt-5 p-5\">\r\n        {posts && posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <React.Fragment>\r\n              <Post key={post._id} data={post} />\r\n            </React.Fragment>\r\n          ))\r\n        ) : (\r\n          <h1>Loading Data...</h1>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\NavBar.js",["119","120"],"import React, { useState } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link, Router } from \"react-router-dom\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport { GlobalStyles } from \"../Resources/Globalstyle\";\r\nimport { lightTheme, darkTheme } from \"../Resources/Theme\";\r\n\r\nconst NavBar = ({ user }) => {\r\n  const [theme, setTheme] = useState(\"light\");\r\n  const themeToggler = () => {\r\n    console.log(\"Switch now\");\r\n    theme === \"light\" ? setTheme(\"dark\") : setTheme(\"light\");\r\n    console.log(theme);\r\n  };\r\n  return (\r\n    <div className=\"Oswald\">\r\n      <ThemeProvider theme={theme === \"light\" ? lightTheme : darkTheme}>\r\n        <div>\r\n          <GlobalStyles />\r\n          <Navbar className=\"nav p-1 shadow navbar-background\" expand=\"lg\">\r\n            <Navbar.Brand href=\"#\">Navbar scroll</Navbar.Brand>\r\n            <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n            <Navbar.Collapse id=\"navbarScroll\" className=\"container\">\r\n              <Nav\r\n                className=\"my-2 my-lg-0\"\r\n                style={{ maxHeight: \"100px\" }}\r\n                navbarScroll\r\n              >\r\n                <Nav.Link href=\"/\" className=\"ml-2 mr-2\">\r\n                  Home\r\n                </Nav.Link>\r\n                <Nav.Link href=\"/posts\" className=\"ml-2 mr-2\">\r\n                  Posts\r\n                </Nav.Link>\r\n                <Nav.Link href=\"#\" className=\"m2-1 mr-2\">\r\n                  Link\r\n                </Nav.Link>\r\n              </Nav>\r\n              <Button className=\"ml-auto\" onClick={themeToggler}>\r\n                Switch Theme\r\n              </Button>\r\n              {user ? (\r\n                <React.Fragment>\r\n                  {/* <Router>\r\n                    <Link to=\"/\">Welcome {user.username}</Link>\r\n                  </Router> */}\r\n                  <Button\r\n                    className=\"ml-auto fw-bolder\"\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    href=\"/logout\"\r\n                  >\r\n                    <Nav.Link href=\"/logout\">Logout</Nav.Link>\r\n                  </Button>\r\n                </React.Fragment>\r\n              ) : (\r\n                <Button\r\n                  className=\"ml-auto fw-bolder\"\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  href=\"/login\"\r\n                >\r\n                  Login\r\n                </Button>\r\n              )}\r\n            </Navbar.Collapse>\r\n          </Navbar>\r\n        </div>\r\n      </ThemeProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Post.js",["121"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nconst Post = (post) => {\r\n  const { data } = post;\r\n  const history = useHistory();\r\n  const routeChange = () => {\r\n    let path = \"/posts/\" + data._id;\r\n    history.push(path);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card\r\n        className=\" card-border border border-info rounded border-shadow d-inline-block mx-5 my-2 py-1\"\r\n        style={{ width: \"18rem\" }}\r\n        onClick={routeChange}\r\n      >\r\n        <Card.Img\r\n          variant=\"top\"\r\n          style={{ height: \"200px\", objectFit: \"contain\" }}\r\n          src={data.img}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>{data.title}</Card.Title>\r\n          <Card.Text>{data.text}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Theme.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Globalstyle.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Data\\PostData.js",[],["122","123"],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostDetail.js",["124","125","126","127","128","129","130"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getPost, updatePost, deletePost } from \"../Services/PostService\";\r\n\r\nimport { Button, Card, Form, Row, Col } from \"react-bootstrap\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\nimport Comments from \"./Comments\";\r\nimport UpdateForm from \"./UpdateForm\";\r\nimport FormData from \"form-data\";\r\n\r\nconst PostDetail = () => {\r\n  const [post, setPost] = useState([]);\r\n  const [editable, setEditable] = useState(false);\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getPost(id)\r\n      .then((data) => {\r\n        setPost(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error Getting Data\");\r\n      });\r\n  }, [setPost]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    //   const updateFormData = new FormData();\r\n    //   updateFormData.set(\"title\", post.title);\r\n    //   updateFormData.set(\"text\", post.text);\r\n    //   for (var pair of updateFormData.entries()) {\r\n    //     console.log(pair[0]+ ', ' + pair[1]);\r\n    // }\r\n    event.preventDefault();\r\n    const postToSend = { title: post.title, text: post.text };\r\n    const response = await updatePost(postToSend, id);\r\n\r\n    setEditable(false);\r\n    console.log(post);\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setPost({\r\n      ...post,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDelete = (event) => {\r\n    const response = deletePost(id);\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    setEditable(!editable);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Card\r\n        className=\"m-5\"\r\n        style={{ width: \"100%\", minHeight: \"30rem\", maxHeight: \"35rem\" }}\r\n      >\r\n        <MdModeEdit onClick={toggleEdit} className=\"position-absolute\" />\r\n\r\n        <Row className=\"h-100\">\r\n          <Col\r\n            xs={6}\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n          >\r\n            <Card.Img\r\n              className=\"w-100\"\r\n              variant=\"git commit -mtop\"\r\n              src={post.img}\r\n              alt={post.img}\r\n              style={{ maxHeight: \"35rem\", objectFit: \"contain\" }}\r\n            />\r\n          </Col>\r\n\r\n          <Col xs={6}>\r\n            <Card.Body style={{ height: \"100%\" }}>\r\n              {editable ? (\r\n                <UpdateForm\r\n                  post={post}\r\n                  handleSubmit={handleSubmit}\r\n                  handleChange={handleChange}\r\n                  handleDelete={handleDelete}\r\n                />\r\n              ) : (\r\n                <React.Fragment>\r\n                  <Card.Title>{post.title}</Card.Title>\r\n                  <Card.Text>{post.text}</Card.Text>\r\n                  {post.comments ? (\r\n                    <Comments Comments={post.comments} postId={id} />\r\n                  ) : (\r\n                    <h1>Loading Comments...</h1>\r\n                  )}\r\n                </React.Fragment>\r\n              )}\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\PostService.js",["131"],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostForm.js",["132","133"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport FormData from \"form-data\";\r\nimport { sendPost } from \"../Services/PostService\";\r\n\r\nconst PostForm = () => {\r\n  const history = useHistory();\r\n  const [formValue, setFormValue] = useState({\r\n    title: \"\",\r\n    text: \"\",\r\n    img: \"\",\r\n  });\r\n  const [signupError, setSignupError] = useState(false);\r\n  const [responseMessage, setResponseMessage] = useState(\"\");\r\n\r\n\r\n  const handleSubmit = async (event) => {\r\n    const postFormData = new FormData();\r\n\r\n    postFormData.append(\"title\", formValue.title);\r\n    postFormData.append(\"text\", formValue.text);\r\n    postFormData.append(\"img\", formValue.img);\r\n\r\n    event.preventDefault();\r\n\r\n    const response = await sendPost(postFormData);\r\n    if (response.status == 200) history.replace(\"/\");\r\n    else {\r\n      console.log(response);\r\n      setSignupError(true);\r\n      setResponseMessage(response.substring(response.indexOf('[')+1,response.indexOf(']')));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleFileChange = (event) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      [event.target.name]: event.target.files[0],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"mt-5 p-5\" onSubmit={handleSubmit}>\r\n      {signupError && (\r\n          <Alert\r\n            variant=\"danger\"\r\n            onClose={() => setSignupError(false)}\r\n            dismissible\r\n          >\r\n            {responseMessage}\r\n          </Alert>\r\n        )}\r\n      <Form.Group className=\"mb-3\" controlId=\"formPostTitle\">\r\n        <Form.Label>Post Title</Form.Label>\r\n        <Form.Control\r\n          name=\"title\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Post Title\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formPostText\">\r\n        <Form.Label>Post Title</Form.Label>\r\n        <Form.Control\r\n          name=\"text\"\r\n          as=\"textarea\"\r\n          rows={5}\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formImageFile\" className=\"mb-3\">\r\n        <Form.Label>Upload Image</Form.Label>\r\n        <Form.Control type=\"file\" name=\"img\" onChange={handleFileChange} />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Create\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PostForm;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Comments.js",["134","135"],"import React, { useEffect, useState } from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport PostComment from \"./PostComment\";\r\nimport { sendComment } from \"../Services/PostService\";\r\nimport { validateComment } from \"../Services/FormService\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst Comments = (props) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [userComment, setUserComment] = useState();\r\n  useEffect(() => {\r\n    setComments(props.Comments);\r\n  }, [setComments]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const {error} = validateComment(userComment);\r\n    if(error){\r\n      console.log(\"Comment must not be empty!\");\r\n      return;\r\n    }\r\n    const originalComments = [...comments];\r\n    const newComments = [...comments, userComment.comment];\r\n    const postId = props.postId;\r\n    setComments(newComments);\r\n    event.target.reset();\r\n    const response = await sendComment(userComment, postId);\r\n    if(response.data != \"Success\"){\r\n      setComments(originalComments);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setUserComment({\r\n      ...userComment,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-100\">\r\n      <Container className=\"mt-1 p-1\">\r\n        {comments ? (\r\n          comments.map((comment) => (\r\n            <React.Fragment>\r\n              <Comment Comment={comment} />\r\n            </React.Fragment>\r\n          ))\r\n        ) : (\r\n          <h1>Loading Data...</h1>\r\n        )}\r\n      </Container>\r\n      <PostComment \r\n      handleSubmit = {handleSubmit} \r\n      handleChange = {handleChange}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Comment.js",["136","137"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst Comment = (props) => {\r\n    return (\r\n        <div>\r\n            <h4>{props.Comment}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\FormService.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Errors\\FormError.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UpdateForm.js",["138","139"],"import React from 'react'\r\nimport { Button, Card, Form, Row, Col } from \"react-bootstrap\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\nconst UpdateForm = ({post, handleSubmit, handleChange, handleDelete}) => {\r\n    return (\r\n        <React.Fragment>\r\n        <TiDelete\r\n          className=\"m-1\"\r\n          style={{ zIndex: 2 }}\r\n          onClick={() => {\r\n            console.log(\"Click!\");\r\n          }}\r\n        />\r\n        <Form onSubmit={handleSubmit}>\r\n          <Card.Title>\r\n            <Form.Control\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={post.title}\r\n              onChange={handleChange}\r\n            />\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <Form.Control\r\n              name=\"text\"\r\n              as=\"textarea\"\r\n              rows={5}\r\n              value={post.text}\r\n              onChange={handleChange}\r\n            />\r\n          </Card.Text>\r\n          <Button className=\"mr-1\" variant=\"primary\" type=\"submit\">\r\n            Update\r\n          </Button>\r\n          <Button\r\n            className=\"ml-1\"\r\n            variant=\"danger\"\r\n            type=\"button\"\r\n            onClick={handleDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Form>\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateForm\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostComment.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\UserService.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UserRegisterForm.js",["140","141","142"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport FormData from \"form-data\";\r\nimport { createUser } from \"../Services/UserService\";\r\n\r\nconst UserRegisterForm = () => {\r\n  const history = useHistory();\r\n  const [formValue, setFormValue] = useState({\r\n    username: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [signupError, setSignupError] = useState(false);\r\n  const [responseMessage, setResponseMessage] = useState(\"\");\r\n\r\n  const handleSubmit = async (event) => {\r\n    const userFormData = {\r\n      username: formValue.username,\r\n      email: formValue.email,\r\n      password: formValue.password,\r\n    };\r\n    event.preventDefault();\r\n\r\n    const response = await createUser(userFormData);\r\n    if (response.status === 200) {\r\n      window.location.replace(\"/\");\r\n    } else {\r\n      console.log(response);\r\n      setSignupError(true);\r\n      setResponseMessage(response.substring(response.indexOf('[')+1,response.indexOf(']')));\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Form className=\"mt-5 p-5\" onSubmit={handleSubmit}>\r\n      <Form.Group className=\"mb-3\" controlId=\"formPostTitle\">\r\n        {signupError && (\r\n          <Alert\r\n            variant=\"danger\"\r\n            onClose={() => setSignupError(false)}\r\n            dismissible\r\n          >\r\n            {responseMessage}\r\n          </Alert>\r\n        )}\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control\r\n          name=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Username\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group className=\"mb-3\" controlId=\"formPostText\">\r\n        <Form.Label>Email</Form.Label>\r\n        <Form.Control\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Email\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formImageFile\" className=\"mb-3\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        SignUp\r\n      </Button>\r\n      <br />\r\n      <Link to=\"/login\">Already have an account?</Link>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UserRegisterForm;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UserLogin.js",["143","144","145","146"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { loginUser } from \"../Services/UserService\";\r\n\r\n\r\nconst UserLogin = () => {\r\n  const history = useHistory();\r\n  const [loginError, setLoginError] = useState(false);\r\n  const [formValue, setFormValue] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (event) => {\r\n    const userFormData = {\r\n      username: formValue.username,\r\n      password: formValue.password,\r\n    };\r\n    event.preventDefault();\r\n\r\n    const response = await loginUser(userFormData);\r\n    if (response.status == 400) console.log(\"Invalid username or password\");\r\n    if (response.status == 200) {\r\n      window.location.replace(\"/\");\r\n    } else {\r\n      setLoginError(true);\r\n      console.log(\"login error:\", loginError);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <Form className=\"mt-5 p-5\" onSubmit={handleSubmit}>\r\n      <Form.Group className=\"mb-3\" controlId=\"formPostTitle\">\r\n        {loginError && (\r\n          <Alert\r\n            variant=\"danger\"\r\n            onClose={() => setLoginError(false)}\r\n            dismissible\r\n          >\r\n            Username or Password are incorrect!\r\n          </Alert>\r\n        )}\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control\r\n          name=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Username\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formImageFile\" className=\"mb-3\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Login\r\n      </Button>\r\n      <br />\r\n      <Link to=\"/signup\">Don't have an account?</Link>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UserLogout.js",["147"],"import React, { useEffect } from \"react\";\r\nimport { logoutUser } from \"../Services/UserService\";\r\n\r\nconst UserLogout = () => {\r\n  useEffect(() => {\r\n   logoutUser();\r\n  });\r\n  return null;\r\n};\r\n\r\nexport default UserLogout;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\AuthService.js",["148"],"const tokenKey = \"token\";\r\n\r\nconst setToken = (jwt) => {\r\n  localStorage.setItem(tokenKey, jwt);\r\n};\r\n\r\nconst getToken = () => {\r\n  return localStorage.getItem(tokenKey);\r\n};\r\n\r\nconst removeToken = () => {\r\n  localStorage.removeItem(tokenKey);\r\n};\r\n\r\nexport default {\r\n  setToken,\r\n  getToken,\r\n  removeToken,\r\n};\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\httpService.js",[],{"ruleId":"149","replacedBy":"150"},{"ruleId":"151","replacedBy":"152"},{"ruleId":"153","severity":1,"message":"154","line":6,"column":10,"nodeType":"155","messageId":"156","endLine":6,"endColumn":17},{"ruleId":"153","severity":1,"message":"157","line":3,"column":10,"nodeType":"155","messageId":"156","endLine":3,"endColumn":14},{"ruleId":"153","severity":1,"message":"158","line":3,"column":16,"nodeType":"155","messageId":"156","endLine":3,"endColumn":22},{"ruleId":"153","severity":1,"message":"159","line":3,"column":16,"nodeType":"155","messageId":"156","endLine":3,"endColumn":22},{"ruleId":"149","replacedBy":"160"},{"ruleId":"151","replacedBy":"161"},{"ruleId":"153","severity":1,"message":"159","line":5,"column":10,"nodeType":"155","messageId":"156","endLine":5,"endColumn":16},{"ruleId":"153","severity":1,"message":"162","line":5,"column":24,"nodeType":"155","messageId":"156","endLine":5,"endColumn":28},{"ruleId":"153","severity":1,"message":"163","line":7,"column":10,"nodeType":"155","messageId":"156","endLine":7,"endColumn":18},{"ruleId":"153","severity":1,"message":"164","line":11,"column":8,"nodeType":"155","messageId":"156","endLine":11,"endColumn":16},{"ruleId":"165","severity":1,"message":"166","line":26,"column":6,"nodeType":"167","endLine":26,"endColumn":15,"suggestions":"168"},{"ruleId":"153","severity":1,"message":"169","line":37,"column":11,"nodeType":"155","messageId":"156","endLine":37,"endColumn":19},{"ruleId":"153","severity":1,"message":"169","line":51,"column":11,"nodeType":"155","messageId":"156","endLine":51,"endColumn":19},{"ruleId":"153","severity":1,"message":"170","line":8,"column":8,"nodeType":"155","messageId":"156","endLine":8,"endColumn":17},{"ruleId":"153","severity":1,"message":"171","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"172","severity":1,"message":"173","line":28,"column":25,"nodeType":"174","messageId":"175","endLine":28,"endColumn":27},{"ruleId":"165","severity":1,"message":"176","line":15,"column":6,"nodeType":"167","endLine":15,"endColumn":19,"suggestions":"177"},{"ruleId":"172","severity":1,"message":"178","line":30,"column":22,"nodeType":"174","messageId":"175","endLine":30,"endColumn":24},{"ruleId":"153","severity":1,"message":"171","line":1,"column":17,"nodeType":"155","messageId":"156","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"179","line":1,"column":28,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"180","line":2,"column":30,"nodeType":"155","messageId":"156","endLine":2,"endColumn":33},{"ruleId":"153","severity":1,"message":"181","line":2,"column":35,"nodeType":"155","messageId":"156","endLine":2,"endColumn":38},{"ruleId":"153","severity":1,"message":"171","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"164","line":4,"column":8,"nodeType":"155","messageId":"156","endLine":4,"endColumn":16},{"ruleId":"153","severity":1,"message":"182","line":8,"column":9,"nodeType":"155","messageId":"156","endLine":8,"endColumn":16},{"ruleId":"153","severity":1,"message":"171","line":1,"column":27,"nodeType":"155","messageId":"156","endLine":1,"endColumn":36},{"ruleId":"153","severity":1,"message":"182","line":8,"column":9,"nodeType":"155","messageId":"156","endLine":8,"endColumn":16},{"ruleId":"172","severity":1,"message":"173","line":23,"column":25,"nodeType":"174","messageId":"175","endLine":23,"endColumn":27},{"ruleId":"172","severity":1,"message":"173","line":24,"column":25,"nodeType":"174","messageId":"175","endLine":24,"endColumn":27},{"ruleId":"153","severity":1,"message":"183","line":1,"column":8,"nodeType":"155","messageId":"156","endLine":1,"endColumn":13},{"ruleId":"184","severity":1,"message":"185","line":15,"column":1,"nodeType":"186","endLine":19,"endColumn":3},"no-native-reassign",["187"],"no-negated-in-lhs",["188"],"no-unused-vars","'getPost' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'Router' is defined but never used.","'Button' is defined but never used.",["187"],["188"],"'Form' is defined but never used.","'TiDelete' is defined but never used.","'FormData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["189"],"'response' is assigned a value but never used.","'FormError' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.Comments'. Either include it or remove the dependency array. If 'setComments' needs the current value of 'props.Comments', you can also switch to useReducer instead of useState and read 'props.Comments' in the reducer.",["190"],"Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'history' is assigned a value but never used.","'React' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"191","fix":"192"},{"desc":"193","fix":"194"},"Update the dependencies array to be: [id, setPost]",{"range":"195","text":"196"},"Update the dependencies array to be: [props.Comments, setComments]",{"range":"197","text":"198"},[827,836],"[id, setPost]",[492,505],"[props.Comments, setComments]"]