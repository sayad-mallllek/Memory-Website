[{"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\index.js":"1","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\reportWebVitals.js":"2","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\App.js":"3","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\ActivityPage.js":"4","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Posts.js":"5","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\NavBar.js":"6","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Post.js":"7","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Theme.js":"8","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Globalstyle.js":"9","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Data\\PostData.js":"10","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostDetail.js":"11","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\PostService.js":"12","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostForm.js":"13","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Comments.js":"14","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Comment.js":"15","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\FormService.js":"16","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Errors\\FormError.js":"17","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UpdateForm.js":"18","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostComment.js":"19","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UserForm.js":"20","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\UserService.js":"21"},{"size":432,"mtime":1629311081054,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1626456011247,"results":"24","hashOfConfig":"23"},{"size":269,"mtime":1633518249510,"results":"25","hashOfConfig":"23"},{"size":891,"mtime":1637749999638,"results":"26","hashOfConfig":"23"},{"size":1172,"mtime":1636635868579,"results":"27","hashOfConfig":"23"},{"size":1974,"mtime":1633517483638,"results":"28","hashOfConfig":"23"},{"size":893,"mtime":1636635892094,"results":"29","hashOfConfig":"23"},{"size":324,"mtime":1631948099481,"results":"30","hashOfConfig":"23"},{"size":583,"mtime":1633350953105,"results":"31","hashOfConfig":"23"},{"size":342,"mtime":1633452731907,"results":"32","hashOfConfig":"23"},{"size":3271,"mtime":1637045422903,"results":"33","hashOfConfig":"23"},{"size":2004,"mtime":1636966123271,"results":"34","hashOfConfig":"23"},{"size":2079,"mtime":1637675827344,"results":"35","hashOfConfig":"23"},{"size":1744,"mtime":1637053103430,"results":"36","hashOfConfig":"23"},{"size":345,"mtime":1637049558986,"results":"37","hashOfConfig":"23"},{"size":1486,"mtime":1637750469815,"results":"38","hashOfConfig":"23"},{"size":360,"mtime":1636964363168,"results":"39","hashOfConfig":"23"},{"size":1312,"mtime":1637045422025,"results":"40","hashOfConfig":"23"},{"size":745,"mtime":1637053441952,"results":"41","hashOfConfig":"23"},{"size":2280,"mtime":1637754628265,"results":"42","hashOfConfig":"23"},{"size":544,"mtime":1637753506610,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1qde78u",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"46"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\index.js",[],["95","96"],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\reportWebVitals.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\App.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\ActivityPage.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Posts.js",["97"],"import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Container } from \"@material-ui/core\";\r\nimport { Button } from \"react-bootstrap\";\r\nimport Post from \"./Post\";\r\nimport { getPost, getPosts } from \"../Services/PostService\";\r\n\r\nconst Posts = () => {\r\n  const history = useHistory();\r\n  const routeChange = () => {\r\n    let path = \"/posts/new\";\r\n    history.push(path);\r\n  };\r\n  const [posts, setPosts] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getPosts()\r\n      .then((data) => {\r\n        setPosts(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error Getting Data\");\r\n      });\r\n  }, [setPosts]);\r\n\r\n  return (\r\n    <div>\r\n      <Button className=\"mt-3\" variant=\"outline-primary\" onClick={routeChange}>Create New Post</Button>\r\n      <Container className=\"mt-5 p-5\">\r\n        {posts && posts.length > 0 ? (\r\n          posts.map((post) => (\r\n            <React.Fragment>\r\n              <Post key={post._id} data={post} />\r\n            </React.Fragment>\r\n          ))\r\n        ) : (\r\n          <h1>Loading Data...</h1>\r\n        )}\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\NavBar.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Post.js",["98"],"import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Card, Button } from \"react-bootstrap\";\r\n\r\nconst Post = (post) => {\r\n  const { data } = post;\r\n  const history = useHistory();\r\n  const routeChange = () => {\r\n    let path = \"/posts/\" + data._id;\r\n    history.push(path);\r\n  };\r\n  return (\r\n    <React.Fragment>\r\n      <Card\r\n        className=\" card-border border border-info rounded border-shadow d-inline-block mx-5 my-2 py-1\"\r\n        style={{ width: \"18rem\" }}\r\n        onClick={routeChange}\r\n      >\r\n        <Card.Img\r\n          variant=\"top\"\r\n          style={{ height: \"200px\", objectFit: \"contain\" }}\r\n          src={data.img}\r\n        />\r\n        <Card.Body>\r\n          <Card.Title>{data.title}</Card.Title>\r\n          <Card.Text>{data.text}</Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Theme.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Globalstyle.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Resources\\Data\\PostData.js",[],["99","100"],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostDetail.js",["101","102","103","104","105","106","107"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { getPost, updatePost, deletePost } from \"../Services/PostService\";\r\n\r\nimport { Button, Card, Form, Row, Col } from \"react-bootstrap\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\nimport Comments from \"./Comments\";\r\nimport UpdateForm from \"./UpdateForm\";\r\nimport FormData from \"form-data\";\r\n\r\nconst PostDetail = () => {\r\n  const [post, setPost] = useState([]);\r\n  const [editable, setEditable] = useState(false);\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getPost(id)\r\n      .then((data) => {\r\n        setPost(data);\r\n        console.log(\"From parent\", data.comments);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error Getting Data\");\r\n      });\r\n  }, [setPost]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    //   const updateFormData = new FormData();\r\n    //   updateFormData.set(\"title\", post.title);\r\n    //   updateFormData.set(\"text\", post.text);\r\n    //   for (var pair of updateFormData.entries()) {\r\n    //     console.log(pair[0]+ ', ' + pair[1]);\r\n    // }\r\n    const postToSend = { title: post.title, text: post.text };\r\n    const response = updatePost(postToSend, id);\r\n    setEditable(false);\r\n    console.log(post);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setPost({\r\n      ...post,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDelete = (event) => {\r\n    const response = deletePost(id);\r\n    history.replace(\"/\");\r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    setEditable(!editable);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Card\r\n        className=\"m-5\"\r\n        style={{ width: \"100%\", minHeight: \"30rem\", maxHeight: \"35rem\" }}\r\n      >\r\n        <MdModeEdit onClick={toggleEdit} className=\"position-absolute\" />\r\n\r\n        <Row className=\"h-100\">\r\n          <Col\r\n            xs={6}\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n          >\r\n            <Card.Img\r\n              className=\"w-100\"\r\n              variant=\"git commit -mtop\"\r\n              src={post.img}\r\n              alt={post.img}\r\n              style={{ maxHeight: \"35rem\", objectFit: \"contain\" }}\r\n            />\r\n          </Col>\r\n\r\n          <Col xs={6}>\r\n            <Card.Body style={{ height: \"100%\" }}>\r\n              {editable ? (\r\n                <UpdateForm\r\n                  post={post}\r\n                  handleSubmit={handleSubmit}\r\n                  handleChange={handleChange}\r\n                  handleDelete={handleDelete}\r\n                />\r\n              ) : (\r\n                <React.Fragment>\r\n                  <Card.Title>{post.title}</Card.Title>\r\n                  <Card.Text>{post.text}</Card.Text>\r\n                  {post.comments ? (\r\n                    <Comments Comments={post.comments} postId={id} />\r\n                  ) : (\r\n                    <h1>Loading Comments...</h1>\r\n                  )}\r\n                </React.Fragment>\r\n              )}\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\PostService.js",["108"],"import { apiUrl } from \"../config.json\";\r\nimport axios from \"axios\";\r\nimport { validateInputText, validateInputFile } from \"../Services/FormService\";\r\nimport FormError from \"../Errors/FormError\";\r\n\r\nexport const getPosts = async () => {\r\n  const { data: posts } = await axios.get(`${apiUrl}/posts`);\r\n  return posts;\r\n};\r\n\r\nexport const getPost = async (id) => {\r\n  const { data: post } = await axios.get(`${apiUrl}/posts/${id}`);\r\n  // console.log(\"Got data from \",id,\" of post: \",post);\r\n  return post;\r\n};\r\n\r\nexport const sendPost = async (post) => {\r\n  try {\r\n    console.log(post);\r\n    let { error } = validateInputText({ title: post.get(\"title\"), text: post.get(\"text\") });\r\n    if (error) {\r\n      return error;\r\n    }\r\n    \r\n    let imageError = validateInputFile(post.get(\"img\"));\r\n    if (imageError) return imageError;\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: apiUrl + \"/posts\",\r\n      data: post,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const updatePost = async (post, id) => {\r\n  try {\r\n    console.log(\"To be updated: \", post);\r\n    const response = await axios({\r\n      method: \"put\",\r\n      url: apiUrl + \"/posts/\" + id,\r\n      data: post,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const deletePost = async (id) => {\r\n  console.log(\"To be deleted: \", id);\r\n  try {\r\n    const response = await axios.delete(`${apiUrl}/posts/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const sendComment = async (comment, postId) => {\r\n  try {\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: apiUrl + \"/posts/\" + postId + \"/comments\",\r\n      data: comment,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostForm.js",["109","110"],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Comments.js",["111","112"],"import React, { useEffect, useState } from \"react\";\r\nimport Comment from \"./Comment\";\r\nimport PostComment from \"./PostComment\";\r\nimport { sendComment } from \"../Services/PostService\";\r\nimport { validateComment } from \"../Services/FormService\";\r\nimport { Container } from \"@material-ui/core\";\r\n\r\n\r\n\r\nconst Comments = (props) => {\r\n  const [comments, setComments] = useState([]);\r\n  const [userComment, setUserComment] = useState();\r\n  useEffect(() => {\r\n    setComments(props.Comments);\r\n  }, [setComments]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    const {error} = validateComment(userComment);\r\n    if(error){\r\n      console.log(\"Comment must not be empty!\");\r\n      return;\r\n    }\r\n    const originalComments = [...comments];\r\n    const newComments = [...comments, userComment.comment];\r\n    const postId = props.postId;\r\n    setComments(newComments);\r\n    event.target.reset();\r\n    // console.log(comments);\r\n    const response = await sendComment(userComment, postId);\r\n    if(response.data != \"Success\"){\r\n      setComments(originalComments);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setUserComment({\r\n      ...userComment,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"h-100\">\r\n      <Container className=\"mt-1 p-1\">\r\n        {comments ? (\r\n          comments.map((comment) => (\r\n            <React.Fragment>\r\n              <Comment Comment={comment} />\r\n            </React.Fragment>\r\n          ))\r\n        ) : (\r\n          <h1>Loading Data...</h1>\r\n        )}\r\n      </Container>\r\n      <PostComment \r\n      handleSubmit = {handleSubmit} \r\n      handleChange = {handleChange}/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Comments;\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\Comment.js",["113","114"],"import React, { useEffect, useState } from \"react\";\r\n\r\nconst Comment = (props) => {\r\n    // const [comment, setComment] = useState([]);\r\n    // useEffect(() => {\r\n    //   setComment(props.Comment);\r\n    // }, [setComment]);\r\n    return (\r\n        <div>\r\n            <h4>{props.Comment}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Comment\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\FormService.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Errors\\FormError.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UpdateForm.js",["115","116"],"import React from 'react'\r\nimport { Button, Card, Form, Row, Col } from \"react-bootstrap\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\n\r\nconst UpdateForm = ({post, handleSubmit, handleChange, handleDelete}) => {\r\n    return (\r\n        <React.Fragment>\r\n        <TiDelete\r\n          className=\"m-1\"\r\n          style={{ zIndex: 2 }}\r\n          onClick={() => {\r\n            console.log(\"Click!\");\r\n          }}\r\n        />\r\n        <Form onSubmit={handleSubmit}>\r\n          <Card.Title>\r\n            <Form.Control\r\n              name=\"title\"\r\n              type=\"text\"\r\n              value={post.title}\r\n              onChange={handleChange}\r\n            />\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <Form.Control\r\n              name=\"text\"\r\n              as=\"textarea\"\r\n              rows={5}\r\n              value={post.text}\r\n              onChange={handleChange}\r\n            />\r\n          </Card.Text>\r\n          <Button className=\"mr-1\" variant=\"primary\" type=\"submit\">\r\n            Update\r\n          </Button>\r\n          <Button\r\n            className=\"ml-1\"\r\n            variant=\"danger\"\r\n            type=\"button\"\r\n            onClick={handleDelete}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </Form>\r\n      </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default UpdateForm\r\n","C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\PostComment.js",[],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Components\\UserForm.js",["117","118","119"],"C:\\Users\\bob\\Documents\\React\\Memory\\memory\\src\\Services\\UserService.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":17},{"ruleId":"124","severity":1,"message":"128","line":3,"column":16,"nodeType":"126","messageId":"127","endLine":3,"endColumn":22},{"ruleId":"120","replacedBy":"129"},{"ruleId":"122","replacedBy":"130"},{"ruleId":"124","severity":1,"message":"128","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":16},{"ruleId":"124","severity":1,"message":"131","line":5,"column":24,"nodeType":"126","messageId":"127","endLine":5,"endColumn":28},{"ruleId":"124","severity":1,"message":"132","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":18},{"ruleId":"124","severity":1,"message":"133","line":11,"column":8,"nodeType":"126","messageId":"127","endLine":11,"endColumn":16},{"ruleId":"134","severity":1,"message":"135","line":27,"column":6,"nodeType":"136","endLine":27,"endColumn":15,"suggestions":"137"},{"ruleId":"124","severity":1,"message":"138","line":37,"column":11,"nodeType":"126","messageId":"127","endLine":37,"endColumn":19},{"ruleId":"124","severity":1,"message":"138","line":51,"column":11,"nodeType":"126","messageId":"127","endLine":51,"endColumn":19},{"ruleId":"124","severity":1,"message":"139","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":17},{"ruleId":"124","severity":1,"message":"140","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"141","severity":1,"message":"142","line":25,"column":23,"nodeType":"143","messageId":"144","endLine":25,"endColumn":25},{"ruleId":"134","severity":1,"message":"145","line":15,"column":6,"nodeType":"136","endLine":15,"endColumn":19,"suggestions":"146"},{"ruleId":"141","severity":1,"message":"147","line":31,"column":22,"nodeType":"143","messageId":"144","endLine":31,"endColumn":24},{"ruleId":"124","severity":1,"message":"140","line":1,"column":17,"nodeType":"126","messageId":"127","endLine":1,"endColumn":26},{"ruleId":"124","severity":1,"message":"148","line":1,"column":28,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"149","line":2,"column":30,"nodeType":"126","messageId":"127","endLine":2,"endColumn":33},{"ruleId":"124","severity":1,"message":"150","line":2,"column":35,"nodeType":"126","messageId":"127","endLine":2,"endColumn":38},{"ruleId":"124","severity":1,"message":"140","line":1,"column":27,"nodeType":"126","messageId":"127","endLine":1,"endColumn":36},{"ruleId":"124","severity":1,"message":"133","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":16},{"ruleId":"141","severity":1,"message":"142","line":29,"column":25,"nodeType":"143","messageId":"144","endLine":29,"endColumn":27},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'getPost' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.",["151"],["152"],"'Form' is defined but never used.","'TiDelete' is defined but never used.","'FormData' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["153"],"'response' is assigned a value but never used.","'FormError' is defined but never used.","'useEffect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'props.Comments'. Either include it or remove the dependency array. If 'setComments' needs the current value of 'props.Comments', you can also switch to useReducer instead of useState and read 'props.Comments' in the reducer.",["154"],"Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},"Update the dependencies array to be: [id, setPost]",{"range":"159","text":"160"},"Update the dependencies array to be: [props.Comments, setComments]",{"range":"161","text":"162"},[879,888],"[id, setPost]",[492,505],"[props.Comments, setComments]"]