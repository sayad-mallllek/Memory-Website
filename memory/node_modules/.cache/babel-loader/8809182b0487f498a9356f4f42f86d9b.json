{"ast":null,"code":"import { apiUrl } from \"../config.json\";\nimport axios from \"axios\";\nimport { validateLoginUser, validateRegisterUser } from \"../Services/FormService\";\nimport jwtDecode from \"jwt-decode\";\nexport const createUser = async user => {\n  try {\n    let {\n      error\n    } = validateRegisterUser(user);\n    if (error) return error.message;\n    const response = await axios({\n      method: \"post\",\n      url: apiUrl + \"/users\",\n      data: user,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    console.log(\"done!\");\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const loginUser = async user => {\n  try {\n    let {\n      error\n    } = validateLoginUser(user);\n    if (error) return error.message;\n    const response = await axios({\n      method: \"post\",\n      url: apiUrl + \"/auth\",\n      data: user,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    const {\n      data: jwt\n    } = response;\n    setToken(jwt);\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const logoutUser = () => {\n  removeToken();\n  window.location.replace(\"/\");\n};\nexport const setToken = jwt => {\n  localStorage.setItem(\"token\", jwt);\n};\nexport const getToken = () => {\n  return localStorage.getItem(\"token\");\n};\nexport const removeToken = () => {\n  localStorage.removeItem(\"token\");\n};\nexport const getUser = () => {\n  const jwt = getToken();\n  console.log(jwt);\n\n  if (jwt) {\n    const user = jwtDecode(jwt);\n    return user;\n  }\n};","map":{"version":3,"sources":["C:/Users/bob/Documents/React/Memory/memory/src/Services/UserService.js"],"names":["apiUrl","axios","validateLoginUser","validateRegisterUser","jwtDecode","createUser","user","error","message","response","method","url","data","headers","console","log","loginUser","jwt","setToken","logoutUser","removeToken","window","location","replace","localStorage","setItem","getToken","getItem","removeItem","getUser"],"mappings":"AAAA,SAASA,MAAT,QAAuB,gBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,oBAFF,QAGO,yBAHP;AAIA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,MAAOC,IAAP,IAAgB;AACxC,MAAI;AACF,QAAI;AAAEC,MAAAA;AAAF,QAAYJ,oBAAoB,CAACG,IAAD,CAApC;AACA,QAAIC,KAAJ,EAAW,OAAOA,KAAK,CAACC,OAAb;AAEX,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC;AAC3BS,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,GAAG,EAAEX,MAAM,GAAG,QAFa;AAG3BY,MAAAA,IAAI,EAAEN,IAHqB;AAI3BO,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAJkB,KAAD,CAA5B;AAMAC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,WAAON,QAAP;AACD,GAZD,CAYE,OAAOF,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAhBM;AAkBP,OAAO,MAAMS,SAAS,GAAG,MAAOV,IAAP,IAAgB;AACvC,MAAI;AACF,QAAI;AAAEC,MAAAA;AAAF,QAAYL,iBAAiB,CAACI,IAAD,CAAjC;AACA,QAAIC,KAAJ,EAAW,OAAOA,KAAK,CAACC,OAAb;AAEX,UAAMC,QAAQ,GAAG,MAAMR,KAAK,CAAC;AAC3BS,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,GAAG,EAAEX,MAAM,GAAG,OAFa;AAG3BY,MAAAA,IAAI,EAAEN,IAHqB;AAI3BO,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAJkB,KAAD,CAA5B;AAMA,UAAM;AAAED,MAAAA,IAAI,EAAEK;AAAR,QAAgBR,QAAtB;AACAS,IAAAA,QAAQ,CAACD,GAAD,CAAR;AACA,WAAOR,QAAP;AACD,GAbD,CAaE,OAAOF,KAAP,EAAc;AACd,WAAOA,KAAP;AACD;AACF,CAjBM;AAmBP,OAAO,MAAMY,UAAU,GAAG,MAAM;AAC9BC,EAAAA,WAAW;AACXC,EAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,GAAxB;AACD,CAHM;AAKP,OAAO,MAAML,QAAQ,GAAID,GAAD,IAAS;AAC/BO,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,GAA9B;AACD,CAFM;AAIP,OAAO,MAAMS,QAAQ,GAAG,MAAM;AAC5B,SAAOF,YAAY,CAACG,OAAb,CAAqB,OAArB,CAAP;AACD,CAFM;AAIP,OAAO,MAAMP,WAAW,GAAG,MAAM;AAC/BI,EAAAA,YAAY,CAACI,UAAb,CAAwB,OAAxB;AACD,CAFM;AAIP,OAAO,MAAMC,OAAO,GAAG,MAAM;AAC3B,QAAMZ,GAAG,GAAGS,QAAQ,EAApB;AACAZ,EAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;;AACA,MAAIA,GAAJ,EAAS;AACP,UAAMX,IAAI,GAAGF,SAAS,CAACa,GAAD,CAAtB;AACA,WAAOX,IAAP;AACD;AACF,CAPM","sourcesContent":["import { apiUrl } from \"../config.json\";\r\nimport axios from \"axios\";\r\nimport {\r\n  validateLoginUser,\r\n  validateRegisterUser,\r\n} from \"../Services/FormService\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport const createUser = async (user) => {\r\n  try {\r\n    let { error } = validateRegisterUser(user);\r\n    if (error) return error.message;\r\n\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: apiUrl + \"/users\",\r\n      data: user,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    console.log(\"done!\");\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const loginUser = async (user) => {\r\n  try {\r\n    let { error } = validateLoginUser(user);\r\n    if (error) return error.message;\r\n\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: apiUrl + \"/auth\",\r\n      data: user,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    const { data: jwt } = response;\r\n    setToken(jwt);\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const logoutUser = () => {\r\n  removeToken();\r\n  window.location.replace(\"/\");\r\n};\r\n\r\nexport const setToken = (jwt) => {\r\n  localStorage.setItem(\"token\", jwt);\r\n};\r\n\r\nexport const getToken = () => {\r\n  return localStorage.getItem(\"token\");\r\n};\r\n\r\nexport const removeToken = () => {\r\n  localStorage.removeItem(\"token\");\r\n};\r\n\r\nexport const getUser = () => {\r\n  const jwt = getToken();\r\n  console.log(jwt);\r\n  if (jwt) {\r\n    const user = jwtDecode(jwt);\r\n    return user;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}