{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bob\\\\Documents\\\\React\\\\Memory\\\\memory\\\\src\\\\Components\\\\PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { Button, Card, Form, Row, Col } from \"react-bootstrap\";\nimport { MdModeEdit } from \"react-icons/md\";\nimport { useParams } from \"react-router-dom\";\nimport { getPost } from \"../Services/PostService\";\nimport { TiDelete } from \"react-icons/ti\";\nimport FormData from \"form-data\";\nimport { updatePost, deletePost } from \"../Services/PostService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = () => {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [editable, setEditable] = useState(false);\n  const history = useHistory();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    getPost(id).then(data => {\n      setPost(data);\n    }).catch(err => {\n      console.log(\"Error Getting Data\");\n    });\n  }, [setPost]);\n\n  const handleSubmit = async event => {\n    //   const updateFormData = new FormData();\n    //   updateFormData.set(\"title\", post.title);\n    //   updateFormData.set(\"text\", post.text);\n    //   for (var pair of updateFormData.entries()) {\n    //     console.log(pair[0]+ ', ' + pair[1]);\n    // }\n    const postToSend = {\n      title: post.title,\n      text: post.text\n    };\n    const response = updatePost(postToSend, id);\n    setEditable(false);\n    console.log(post);\n    event.preventDefault();\n  };\n\n  const handleChange = event => {\n    setPost({ ...post,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleDelete = event => {\n    // const response = deletePost(id);\n    history.replace(\"/\");\n  };\n\n  const toggleEdit = () => {\n    setEditable(!editable);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex justify-content-center\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"m-5\",\n      style: {\n        width: \"100%\",\n        minHeight: \"30rem\",\n        maxHeight: \"35rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(MdModeEdit, {\n        onClick: toggleEdit,\n        className: \"position-absolute\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: post.img,\n            alt: post.img,\n            style: {\n              maxHeight: \"35rem\",\n              objectFit: \"contain\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Card.Body, {\n            style: {\n              height: \"100%\"\n            },\n            children: editable ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TiDelete, {\n                className: \"m-1\",\n                style: {\n                  zIndex: 2\n                },\n                onClick: () => {\n                  console.log(\"Click!\");\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"title\",\n                    type: \"text\",\n                    value: post.title,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                    name: \"text\",\n                    as: \"textarea\",\n                    rows: 5,\n                    value: post.text,\n                    onChange: handleChange\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"mr-1\",\n                  variant: \"primary\",\n                  type: \"submit\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  className: \"ml-1\",\n                  variant: \"danger\",\n                  type: \"button\",\n                  onClick: handleDelete,\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: post.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: post.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostDetail, \"oIDuagHM52gKv/fYTOBkXPY7wVE=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["C:/Users/bob/Documents/React/Memory/memory/src/Components/PostDetail.js"],"names":["React","useEffect","useState","useHistory","Button","Card","Form","Row","Col","MdModeEdit","useParams","getPost","TiDelete","FormData","updatePost","deletePost","PostDetail","post","setPost","editable","setEditable","history","id","then","data","catch","err","console","log","handleSubmit","event","postToSend","title","text","response","preventDefault","handleChange","target","name","value","handleDelete","replace","toggleEdit","width","minHeight","maxHeight","img","objectFit","height","zIndex"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Button, Card, Form, Row, Col } from \"react-bootstrap\";\r\nimport { MdModeEdit } from \"react-icons/md\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getPost } from \"../Services/PostService\";\r\nimport { TiDelete } from \"react-icons/ti\";\r\nimport FormData from \"form-data\";\r\nimport { updatePost, deletePost } from \"../Services/PostService\";\r\n\r\nconst PostDetail = () => {\r\n  const [post, setPost] = useState([]);\r\n  const [editable, setEditable] = useState(false);\r\n  const history = useHistory();\r\n  const { id } = useParams();\r\n  useEffect(() => {\r\n    getPost(id)\r\n      .then((data) => {\r\n        setPost(data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(\"Error Getting Data\");\r\n      });\r\n  }, [setPost]);\r\n\r\n  const handleSubmit = async (event) => {\r\n    //   const updateFormData = new FormData();\r\n    //   updateFormData.set(\"title\", post.title);\r\n    //   updateFormData.set(\"text\", post.text);\r\n    //   for (var pair of updateFormData.entries()) {\r\n    //     console.log(pair[0]+ ', ' + pair[1]);\r\n    // }\r\n    const postToSend = { title: post.title, text: post.text };\r\n    const response = updatePost(postToSend, id);\r\n    setEditable(false);\r\n    console.log(post);\r\n    event.preventDefault();\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setPost({\r\n      ...post,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleDelete = (event) => {\r\n    // const response = deletePost(id);\r\n    history.replace(\"/\");\r\n    \r\n  };\r\n\r\n  const toggleEdit = () => {\r\n    setEditable(!editable);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center\">\r\n      <Card\r\n        className=\"m-5\"\r\n        style={{ width: \"100%\", minHeight: \"30rem\", maxHeight: \"35rem\" }}\r\n      >\r\n        <MdModeEdit onClick={toggleEdit} className=\"position-absolute\" />\r\n\r\n        <Row>\r\n          <Col xs={6}>\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src={post.img}\r\n              alt={post.img}\r\n              style={{ maxHeight: \"35rem\", objectFit: \"contain\" }}\r\n            />\r\n          </Col>\r\n\r\n          <Col xs={6}>\r\n            <Card.Body style={{ height: \"100%\" }}>\r\n              {editable ? (\r\n                <React.Fragment>\r\n                  <TiDelete\r\n                    className=\"m-1\"\r\n                    style={{ zIndex: 2 }}\r\n                    onClick={() => {\r\n                      console.log(\"Click!\");\r\n                    }}\r\n                  />\r\n                  <Form onSubmit={handleSubmit}>\r\n                    <Card.Title>\r\n                      <Form.Control\r\n                        name=\"title\"\r\n                        type=\"text\"\r\n                        value={post.title}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Card.Title>\r\n                    <Card.Text>\r\n                      <Form.Control\r\n                        name=\"text\"\r\n                        as=\"textarea\"\r\n                        rows={5}\r\n                        value={post.text}\r\n                        onChange={handleChange}\r\n                      />\r\n                    </Card.Text>\r\n                    <Button className=\"mr-1\" variant=\"primary\" type=\"submit\">\r\n                      Update\r\n                    </Button>\r\n                    <Button\r\n                      className=\"ml-1\"\r\n                      variant=\"danger\"\r\n                      type=\"button\"\r\n                      onClick={handleDelete}\r\n                    >\r\n                      Delete\r\n                    </Button>\r\n                  </Form>\r\n                </React.Fragment>\r\n              ) : (\r\n                <React.Fragment>\r\n                  <Card.Title>{post.title}</Card.Title>\r\n                  <Card.Text>{post.text}</Card.Text>\r\n                </React.Fragment>\r\n              )}\r\n            </Card.Body>\r\n          </Col>\r\n        </Row>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PostDetail;\r\n"]},"metadata":{},"sourceType":"module"}