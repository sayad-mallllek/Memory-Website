{"ast":null,"code":"import { apiUrl } from \"../config.json\";\nimport axios from \"axios\";\nimport { validateInputText, validateInputFile } from \"../Services/FormService\";\nimport FormError from \"../Errors/FormError\";\nexport const getPosts = async () => {\n  const {\n    data: posts\n  } = await axios.get(`${apiUrl}/posts`);\n  return posts;\n};\nexport const getPost = async id => {\n  const {\n    data: post\n  } = await axios.get(`${apiUrl}/posts/${id}`); // console.log(\"Got data from \",id,\" of post: \",post);\n\n  return post;\n};\nexport const sendPost = async post => {\n  try {\n    let {\n      error\n    } = validateInputText({\n      title: post.title,\n      text: post.text\n    });\n\n    if (error) {\n      console.log(\"Joi Error!\");\n      return error;\n    }\n\n    console.log(\"Ok Next one!\");\n    let imageError = validateInputFile(post.img);\n    if (imageError) return imageError;\n    console.log(\"Ok Final one!\");\n    const response = await axios({\n      method: \"post\",\n      url: apiUrl + \"/posts\",\n      data: post,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const updatePost = async (post, id) => {\n  try {\n    console.log(\"To be updated: \", post);\n    const response = await axios({\n      method: \"put\",\n      url: apiUrl + \"/posts/\" + id,\n      data: post,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const deletePost = async id => {\n  console.log(\"To be deleted: \", id);\n\n  try {\n    const response = await axios.delete(`${apiUrl}/posts/${id}`);\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const sendComment = async (comment, postId) => {\n  try {\n    const response = await axios({\n      method: \"post\",\n      url: apiUrl + \"/posts/\" + postId + \"/comments\",\n      data: comment,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response;\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"sources":["C:/Users/bob/Documents/React/Memory/memory/src/Services/PostService.js"],"names":["apiUrl","axios","validateInputText","validateInputFile","FormError","getPosts","data","posts","get","getPost","id","post","sendPost","error","title","text","console","log","imageError","img","response","method","url","headers","updatePost","deletePost","delete","sendComment","comment","postId"],"mappings":"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","sourcesContent":["import { apiUrl } from \"../config.json\";\r\nimport axios from \"axios\";\r\nimport { validateInputText, validateInputFile } from \"../Services/FormService\";\r\nimport FormError from \"../Errors/FormError\";\r\n\r\nexport const getPosts = async () => {\r\n  const { data: posts } = await axios.get(`${apiUrl}/posts`);\r\n  return posts;\r\n};\r\n\r\nexport const getPost = async (id) => {\r\n  const { data: post } = await axios.get(`${apiUrl}/posts/${id}`);\r\n  // console.log(\"Got data from \",id,\" of post: \",post);\r\n  return post;\r\n};\r\n\r\nexport const sendPost = async (post) => {\r\n  try {\r\n    let { error } = validateInputText({ title: post.title, text: post.text });\r\n    if (error) {\r\n      console.log(\"Joi Error!\");\r\n      return error;\r\n    }\r\n    console.log(\"Ok Next one!\");\r\n    let imageError = validateInputFile(post.img);\r\n    if (imageError) return imageError;\r\n    console.log(\"Ok Final one!\");\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: apiUrl + \"/posts\",\r\n      data: post,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const updatePost = async (post, id) => {\r\n  try {\r\n    console.log(\"To be updated: \", post);\r\n    const response = await axios({\r\n      method: \"put\",\r\n      url: apiUrl + \"/posts/\" + id,\r\n      data: post,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const deletePost = async (id) => {\r\n  console.log(\"To be deleted: \", id);\r\n  try {\r\n    const response = await axios.delete(`${apiUrl}/posts/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const sendComment = async (comment, postId) => {\r\n  try {\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: apiUrl + \"/posts/\" + postId + \"/comments\",\r\n      data: comment,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}