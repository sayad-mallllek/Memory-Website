{"ast":null,"code":"import { apiUrl } from \"../config.json\";\nimport axios from \"axios\";\nimport { validateInputText, validateInputFile, validateComment } from \"../Services/FormService\";\nimport FormError from \"../Errors/FormError\";\nimport auth from \"./AuthService\";\nimport httpService from \"./httpService\"; // console.log(auth.getToken());\n\nexport const getPosts = async () => {\n  const posts = await httpService.get(`${apiUrl}/posts`);\n  return posts;\n};\nexport const getPost = async id => {\n  const {\n    data: post\n  } = await axios.get(`${apiUrl}/posts/${id}`); // console.log(\"Got data from \",id,\" of post: \",post);\n\n  return post;\n};\nexport const sendPost = async post => {\n  try {\n    console.log(post);\n    let {\n      error\n    } = validateInputText({\n      title: post.get(\"title\"),\n      text: post.get(\"text\")\n    });\n\n    if (error) {\n      return error.message;\n    }\n\n    let imageError = validateInputFile(post.get(\"img\"));\n    if (imageError) return imageError.message;\n    const response = await axios({\n      method: \"post\",\n      url: apiUrl + \"/posts\",\n      data: post,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\"\n      }\n    });\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const updatePost = async (post, id) => {\n  try {\n    let {\n      error\n    } = validateInputText({\n      title: post.get(\"title\"),\n      text: post.get(\"text\")\n    });\n\n    if (error) {\n      return error.message;\n    }\n\n    console.log(\"To be updated: \", post);\n    const response = await axios({\n      method: \"put\",\n      url: apiUrl + \"/posts/\" + id,\n      data: post,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const deletePost = async id => {\n  console.log(\"To be deleted: \", id);\n\n  try {\n    const response = await axios.delete(`${apiUrl}/posts/${id}`);\n    return response;\n  } catch (error) {\n    return error;\n  }\n};\nexport const sendComment = async (comment, postId) => {\n  try {\n    let {\n      error\n    } = validateComment(comment);\n\n    if (error) {\n      return error.message;\n    }\n\n    const response = await axios({\n      method: \"post\",\n      url: apiUrl + \"/posts/\" + postId + \"/comments\",\n      data: comment,\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    });\n    return response;\n  } catch (error) {\n    return error;\n  }\n};","map":{"version":3,"sources":["C:/Users/bob/Documents/React/Memory/memory/src/Services/PostService.js"],"names":["apiUrl","axios","validateInputText","validateInputFile","validateComment","FormError","auth","httpService","getPosts","posts","get","getPost","id","data","post","sendPost","console","log","error","title","text","message","imageError","response","method","url","headers","updatePost","deletePost","delete","sendComment","comment","postId"],"mappings":"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","sourcesContent":["import { apiUrl } from \"../config.json\";\r\nimport axios from \"axios\";\r\nimport {\r\n  validateInputText,\r\n  validateInputFile,\r\n  validateComment,\r\n} from \"../Services/FormService\";\r\nimport FormError from \"../Errors/FormError\";\r\nimport auth from \"./AuthService\";\r\nimport httpService from \"./httpService\"\r\n\r\n// console.log(auth.getToken());\r\n\r\nexport const getPosts = async () => {\r\n  const posts  = await httpService.get(`${apiUrl}/posts`);\r\n  return posts;\r\n};\r\n\r\nexport const getPost = async (id) => {\r\n  const { data: post } = await axios.get(`${apiUrl}/posts/${id}`);\r\n  // console.log(\"Got data from \",id,\" of post: \",post);\r\n  return post;\r\n};\r\n\r\nexport const sendPost = async (post) => {\r\n  try {\r\n    console.log(post);\r\n    let { error } = validateInputText({\r\n      title: post.get(\"title\"),\r\n      text: post.get(\"text\"),\r\n    });\r\n    if (error) {\r\n      return error.message;\r\n    }\r\n\r\n    let imageError = validateInputFile(post.get(\"img\"));\r\n    if (imageError) return imageError.message;\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: apiUrl + \"/posts\",\r\n      data: post,\r\n      headers: { \"Content-Type\": \"multipart/form-data\" },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const updatePost = async (post, id) => {\r\n  try {\r\n    let { error } = validateInputText({\r\n      title: post.get(\"title\"),\r\n      text: post.get(\"text\"),\r\n    });\r\n    if (error) {\r\n      return error.message;\r\n    }\r\n    console.log(\"To be updated: \", post);\r\n    const response = await axios({\r\n      method: \"put\",\r\n      url: apiUrl + \"/posts/\" + id,\r\n      data: post,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const deletePost = async (id) => {\r\n  console.log(\"To be deleted: \", id);\r\n  try {\r\n    const response = await axios.delete(`${apiUrl}/posts/${id}`);\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n\r\nexport const sendComment = async (comment, postId) => {\r\n  try {\r\n    let { error } = validateComment(comment);\r\n    if (error) {\r\n      return error.message;\r\n    }\r\n    const response = await axios({\r\n      method: \"post\",\r\n      url: apiUrl + \"/posts/\" + postId + \"/comments\",\r\n      data: comment,\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    });\r\n    return response;\r\n  } catch (error) {\r\n    return error;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}