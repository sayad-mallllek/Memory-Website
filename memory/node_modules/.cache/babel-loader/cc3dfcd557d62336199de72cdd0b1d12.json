{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bob\\\\Documents\\\\React\\\\Memory\\\\memory\\\\src\\\\Components\\\\UserLogin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useHistory, Link } from \"react-router-dom\";\nimport { Form, Button, Alert } from \"react-bootstrap\";\nimport { loginUser } from \"../Services/UserService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst UserLogin = () => {\n  _s();\n\n  const history = useHistory();\n  const [loginError, setLoginError] = useState(false);\n  const [formValue, setFormValue] = useState({\n    username: \"\",\n    password: \"\"\n  });\n\n  const handleSubmit = async event => {\n    const userFormData = {\n      username: formValue.username,\n      password: formValue.password\n    };\n    event.preventDefault();\n    const response = await loginUser(userFormData);\n    if (response.status == 400) console.log(\"Invalid username or password\");\n\n    if (response.status == 200) {\n      window.location.replace(\"/\");\n    } else {\n      setLoginError(true);\n      console.log(\"login error:\", loginError);\n    }\n  };\n\n  const handleChange = event => {\n    setFormValue({ ...formValue,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    className: \"mt-5 p-5\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formPostTitle\",\n      children: [loginError && /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        onClose: () => setLoginError(false),\n        dismissible: true,\n        children: \"Username or Password are incorrect!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        name: \"username\",\n        type: \"text\",\n        placeholder: \"Enter Username\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      controlId: \"formImageFile\",\n      className: \"mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        name: \"password\",\n        type: \"password\",\n        placeholder: \"Enter Password\",\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/signup\",\n      children: \"Don't have an account?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_s(UserLogin, \"4s1fstuTFtgZ7D+6kS3VWnQXIK8=\", false, function () {\n  return [useHistory];\n});\n\n_c = UserLogin;\nexport default UserLogin;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"sources":["C:/Users/bob/Documents/React/Memory/memory/src/Components/UserLogin.js"],"names":["React","useState","useEffect","useHistory","Link","Form","Button","Alert","loginUser","UserLogin","history","loginError","setLoginError","formValue","setFormValue","username","password","handleSubmit","event","userFormData","preventDefault","response","status","console","log","window","location","replace","handleChange","target","name","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, Link } from \"react-router-dom\";\r\nimport { Form, Button, Alert } from \"react-bootstrap\";\r\nimport { loginUser } from \"../Services/UserService\";\r\n\r\nconst UserLogin = () => {\r\n  const history = useHistory();\r\n  const [loginError, setLoginError] = useState(false);\r\n  const [formValue, setFormValue] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  const handleSubmit = async (event) => {\r\n    const userFormData = {\r\n      username: formValue.username,\r\n      password: formValue.password,\r\n    };\r\n    event.preventDefault();\r\n\r\n    const response = await loginUser(userFormData);\r\n    if (response.status == 400) console.log(\"Invalid username or password\");\r\n    if (response.status == 200) {\r\n      window.location.replace(\"/\");\r\n    } else {\r\n      setLoginError(true);\r\n      console.log(\"login error:\", loginError);\r\n    }\r\n  };\r\n\r\n  const handleChange = (event) => {\r\n    setFormValue({\r\n      ...formValue,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n  return (\r\n    <Form className=\"mt-5 p-5\" onSubmit={handleSubmit}>\r\n      <Form.Group className=\"mb-3\" controlId=\"formPostTitle\">\r\n        {loginError && (\r\n          <Alert\r\n            variant=\"danger\"\r\n            onClose={() => setLoginError(false)}\r\n            dismissible\r\n          >\r\n            Username or Password are incorrect!\r\n          </Alert>\r\n        )}\r\n        <Form.Label>Username</Form.Label>\r\n        <Form.Control\r\n          name=\"username\"\r\n          type=\"text\"\r\n          placeholder=\"Enter Username\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Form.Group controlId=\"formImageFile\" className=\"mb-3\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"Enter Password\"\r\n          onChange={handleChange}\r\n        />\r\n      </Form.Group>\r\n      <Button variant=\"primary\" type=\"submit\">\r\n        Login\r\n      </Button>\r\n      <br />\r\n      <Link to=\"/signup\">Don't have an account?</Link>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default UserLogin;\r\n"]},"metadata":{},"sourceType":"module"}